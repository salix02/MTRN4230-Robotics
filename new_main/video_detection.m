function video_detection(vid1,vid2,handle)
%video_detection
%   this function handles video detection.
%   it takes in handles generated by start_vid function.
%   the detection status are stored in global struct detection_State that
%   can be used by other functions.
%   see also start_vid

    global on_table not_inside_grid on_board on_deck1 on_deck2 orientation_box
    global in_box
    global vacum detection
    global board_stat deck1_stat deck2_stat
    global detection_State
    detection_State.board_matrix=zeros(9,9,2);
    detection_State.deck1_matrix=zeros(6,1,2);
    detection_State.deck2_matrix=zeros(6,1,2);
    cameraParams=load('cameraParams.mat');
    cameraParams=cameraParams.cameraParams;
    ratio_table=1.524;
    ratio_convey=787/520;
    robot_center1=[796, 858-548.6*ratio_table];%%%%%%%%%%%%%
    robot_center2=[215, 781-175*ratio_convey];%%%%%%%%%%%%%%
    set(handle.t1(:),'Position',[0,0],'String','');
    set(handle.t2(:),'Position',[0,0],'String','');
%% plot for first video feed
    im1=getsnapshot(vid1);
    [im1,newOrigin1]=undistortImage(im1,cameraParams);
    try
        [result1]=detect_blocks(im1,robot_center1);
    catch
    end
    if exist('result1','var')
        coord2cell(result1);
        reach1=find(result1(:,6)==1);
        result1=result1(reach1,:);
        set(handle.p1,'xdata',result1(:,1),'ydata',result1(:,2));
        set(handle.ori1,'xdata',result1(:,1),'ydata',result1(:,2),'UData',60*cos(result1(:,3)),'VData',60*sin(result1(:,3)),'AutoScale','off');
        for i=1:length(result1(:,1))
            temp1=int2str(uint8(result1(i,4)));
            temp2=int2str(uint8(result1(i,5)));
            temp=strcat(temp1,temp2);
            if result1(i,6)==1
                set(handle.t1(i),'Position',result1(i,1:2),'String',temp);
%                     text(result1(i,1),result1(i,2),temp,'Color','m','FontSize',8);
            end
        end
    else
        set(handle.p1,'xdata',0,'ydata',0);
        set(handle.ori1,'xdata',0,'ydata',0,'UData',0,'VData',0,'AutoScale','off');
    end
    drawnow();
%% plot for second video feed
    im2=getsnapshot(vid2);
    [im2,newOrigin2]=undistortImage(im2,cameraParams);
    try
        [centroid_box,orientation_box,BW_box]=box_detection(im2);% calculate centroid and orientation of box
        [result2]=detect_blocks_box(im2,BW_box,orientation_box,robot_center2);%missing reachability
        box_occupancy(centroid_box,orientation_box);
        detection_State.orientation_box=orientation_box;
    catch
    end;
    if exist('result2','var')
        reach2=find(result2(:,6)==1);
        result2=result2(reach2,:);
        detection_State.in_box_CVframe=result2;
        detection_State.in_box_CVframe(:,2)=1200-detection_State.in_box_CVframe(:,2);
        in_box=result2;
        in_box(:,2)=1200-in_box(:,2);
        in_box=conveyor2global(in_box);
        in_box=in_box(:,1:5);
        in_box(:,3)=in_box(:,3)*-1;
        detection_State.in_box=in_box;
        set(handle.p2,'xdata',result2(:,1),'ydata',result2(:,2));
        set(handle.ori2,'xdata',result2(:,1),'ydata',result2(:,2),'UData',60*cos(result2(:,3)),'VData',60*sin(result2(:,3)),'AutoScale','off');
        for i=1:length(result2(:,1))
            temp1=int2str(uint8(result2(i,4)));
            temp2=int2str(uint8(result2(i,5)));
            temp=strcat(temp1,temp2);
            if result2(i,6)==1
                set(handle.t2(i),'Position',result2(i,1:2),'String',temp);
%                     text(result2(i,1),result2(i,2),temp,'Color','w','FontSize',8);
            end
        end
    else
        set(handle.p2,'xdata',0,'ydata',0);
        set(handle.ori2,'xdata',0,'ydata',0,'UData',0,'VData',0,'AutoScale','off');
    end
    drawnow();
end